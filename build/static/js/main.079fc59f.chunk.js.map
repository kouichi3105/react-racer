{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["style","width","margin","App","props","onSliderChange","value","setState","onAfterChange","console","log","onStSliderChange","st_value","onStAfterChange","state","text","post","sliderValues","handleClick","bind","handleClick2","onReset","fetch","method","then","response","body","this","className","onChange","color","Button","variant","onClick","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sSAUMA,EAAQ,CAAEC,MAAO,IAAKC,OAAQ,IA4FrBC,EAzFf,kDAEE,WAAYC,GAAO,IAAD,8BAChB,gBAoCFC,eAAiB,SAACC,GAChB,EAAKC,SAAS,CACZD,WAvCc,EA2ClBE,cAAgB,SAACF,GACfG,QAAQC,IAAIJ,IA5CI,EA+ClBK,iBAAmB,SAACC,GAClB,EAAKL,SAAS,CACZK,cAjDc,EAqDlBC,gBAAkB,SAACD,GACjBH,QAAQC,IAAIE,IApDZ,EAAKE,MAAQ,CACXC,KAAM,GACNC,KAAM,GACNC,aAAc,EACdL,SAAU,IAGZ,EAAKM,YAAc,EAAKA,YAAYC,KAAjB,gBACnB,EAAKC,aAAe,EAAKA,aAAaD,KAAlB,gBACpB,EAAKE,QAAU,EAAKA,QAAQF,KAAb,gBAXC,EAFpB,+CAgBE,WAAe,IAAD,OACZG,MAvBW,4BAuBG,CACZC,OAAQ,QACPC,MAAK,SAAAC,GAAQ,OAAIA,EAASV,UAC5BS,MAAK,SAAAT,GACJ,EAAKR,SAAS,CAACQ,KAAMA,SArB3B,0BAyBE,WAAgB,IAAD,OACbO,MA/BgB,6BA+BG,CACjBC,OAAQ,OACRG,KAAM,cACLF,MAAK,SAAAC,GAAQ,OAAIA,EAASV,UAC5BS,MAAK,SAAAT,GACJ,EAAKR,SAAS,CAACS,KAAMD,SA/B3B,qBAmCE,WACEY,KAAKpB,SAAS,CAACQ,KAAM,GAAGC,KAAM,GAAIV,MAAO,EAAGM,SAAU,OApC1D,oBA2DE,WACE,OACE,qBAAKgB,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACE,sBAAK5B,MAAOA,EAAZ,UACE,sCACA,cAAC,IAAD,CACEM,MAAOqB,KAAKb,MAAMR,MAClBuB,SAAUF,KAAKtB,eACfG,cAAemB,KAAKnB,gBAEtB,yCACA,cAAC,IAAD,CACEF,MAAOqB,KAAKb,MAAMF,SAClBiB,SAAUF,KAAKhB,iBACfH,cAAemB,KAAKd,kBAEtB,cAAC,IAAD,CAAciB,MAAM,aAEtB,cAACC,EAAA,EAAD,CAAQC,QAAQ,YAAYF,MAAM,UAAUG,QAASN,KAAKT,YAA1D,sBACA,4BAAIS,KAAKb,MAAMC,OACf,cAACgB,EAAA,EAAD,CAAQC,QAAQ,YAAYF,MAAM,YAAYG,QAASN,KAAKP,aAA5D,uBACA,4BAAIO,KAAKb,MAAME,OACf,cAACe,EAAA,EAAD,CAAQC,QAAQ,YAAYC,QAASN,KAAKN,QAA1C,4BAlFV,GAAyBa,IAAMC,WCDhBC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBd,MAAK,YAAkD,IAA/Ce,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.079fc59f.chunk.js","sourcesContent":["import './App.css';\nimport React from 'react';\nimport { Button } from '@material-ui/core';\nimport DriveEtaIcon from '@material-ui/icons/DriveEta';\nimport Slider from 'rc-slider';\nimport 'rc-slider/assets/index.css';\n\nconst server = 'http://localhost:5000/get';\nconst post_server = 'http://localhost:5000/post';\n\nconst style = { width: 400, margin: 50};\n\n//function App() {\nexport class App extends React.Component {\n\n  constructor(props){\n    super();\n    this.state = {\n      text: '',\n      post: '',\n      sliderValues: 0,\n      st_value: 50\n    };\n\n    this.handleClick = this.handleClick.bind(this);\n    this.handleClick2 = this.handleClick2.bind(this);\n    this.onReset = this.onReset.bind(this);\n  }\n\n  handleClick() {\n    fetch(server, {\n      method: \"GET\",\n    }).then(response => response.text())\n    .then(text => {\n      this.setState({text: text});\n    });    \n  }\n\n  handleClick2() {\n    fetch(post_server, {\n      method: \"POST\",\n      body: \"Post Data\"\n    }).then(response => response.text())\n    .then(text => {\n      this.setState({post: text});\n    });    \n  }\n\n  onReset() {\n    this.setState({text: '',post: '', value: 0, st_value: 50});\n  }\n\n  onSliderChange = (value) => {\n    this.setState({\n      value,\n    });\n  }\n\n  onAfterChange = (value) => {\n    console.log(value);\n  }\n\n  onStSliderChange = (st_value) => {\n    this.setState({\n      st_value,\n    });\n  }\n\n  onStAfterChange = (st_value) => {\n    console.log(st_value);\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <div style={style}>\n            <p>Speed</p>\n            <Slider \n              value={this.state.value}\n              onChange={this.onSliderChange}\n              onAfterChange={this.onAfterChange}\n            />\n            <p>Steering</p>\n            <Slider \n              value={this.state.st_value}\n              onChange={this.onStSliderChange}\n              onAfterChange={this.onStAfterChange}\n            />\n            <DriveEtaIcon color=\"black\"/>\n          </div>\n          <Button variant=\"contained\" color=\"primary\" onClick={this.handleClick}>Get Data</Button>\n          <p>{this.state.text}</p>\n          <Button variant=\"contained\" color=\"secondary\" onClick={this.handleClick2}>Post Data</Button>\n          <p>{this.state.post}</p>\n          <Button variant=\"contained\" onClick={this.onReset}>Reset</Button>\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}